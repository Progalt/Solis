
class Number

	function abs()
		
		if self < 0 then 
			return -self
		end 

		return self

	end

end

class Bool

	function toString()
		
		if self then 
			return "true"
		end

		return "false"
	end	

end 

class String
	
	function toString()
		return self
	end

end

class List

	function toString()
		var str = "[ "
		var idx = 0

		var len = self.length()
		while idx < len do
			
			var idxStr = self.at(idx).toString()
			str = str + idxStr

			if idx < len - 1 then
				str = str + ", "
			end

			idx = idx + 1
		end

		str = str + " ]"

		return str

	end

end
 
class Range

	var min = 0
	var max = 0
	var step = 1

	function toString()

		var str = self.min.toString()
		str = str + ".." 
		str = str + self.max.toString()

		return str
	end

	function expand()
		var out = []
		var idx = self.min

		while idx < self.max do

			out.append(idx)
			idx = idx + self.step
		end

		return out

	end

	function iterate(itr)

		if itr == null then
			return 0
		end

		var i = itr
		if itr >= self.max - self.step then
			return false
		end

		return i + self.step

	end

	function iteratorValue(index)
		
		return (self.min + (index * self.step))
	end

end


function println(val)
	
	__c_printf(val.toString())

end